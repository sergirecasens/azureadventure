{"version":3,"file":"index.js","sources":["../src/internal/cryptoHelpers.ts","../src/appConfigCredential.ts","../src/generated/src/models/mappers.ts","../src/generated/src/models/parameters.ts","../src/generated/src/appConfigurationContext.ts","../src/generated/src/appConfiguration.ts","../src/policies/throttlingRetryPolicy.ts","../src/internal/helpers.ts","../src/internal/tracingHelpers.ts","../src/internal/synctokenpolicy.ts","../src/appConfigurationClient.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { createHash, createHmac } from \"crypto\";\n\n/**\n * @internal\n * @ignore\n */\nexport async function sha256Digest(body: string | undefined): Promise<string> {\n  return createHash(\"sha256\")\n    .update(body || \"\")\n    .digest(\"base64\");\n}\n\n/**\n * @internal\n * @ignore\n */\nexport async function sha256Hmac(secret: string, stringToSign: string): Promise<string> {\n  const decodedSecret = Buffer.from(secret, \"base64\");\n\n  return createHmac(\"sha256\", decodedSecret)\n    .update(stringToSign)\n    .digest(\"base64\");\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { ServiceClientCredentials, WebResource, URLBuilder } from \"@azure/core-http\";\nimport { sha256Digest, sha256Hmac } from \"./internal/cryptoHelpers\";\n\n/**\n * @internal\n * @ignore\n */\nexport class AppConfigCredential implements ServiceClientCredentials {\n  private credential: string;\n  private secret: string;\n\n  constructor(credential: string, secret: string) {\n    this.credential = credential;\n    this.secret = secret;\n  }\n\n  /**\n   * Signs a request with the values provided in the credential and secret parameter.\n   *\n   * @param {WebResource} webResource The WebResource to be signed.\n   * @returns {Promise<WebResource>} The signed request object.\n   */\n  async signRequest(webResource: WebResource): Promise<WebResource> {\n    const verb = webResource.method.toUpperCase();\n    const utcNow = new Date().toUTCString();\n\n    const contentHash = await sha256Digest(webResource.body || \"\");\n\n    const signedHeaders = \"x-ms-date;host;x-ms-content-sha256\";\n\n    const url = URLBuilder.parse(webResource.url);\n    const query = url.getQuery();\n    const urlPathAndQuery = `${url.getPath()}${query ? \"?\" + query : \"\"}`;\n\n    const stringToSign = `${verb}\\n${urlPathAndQuery}\\n${utcNow};${url.getHost()};${contentHash}`;\n\n    const signature = await sha256Hmac(this.secret, stringToSign);\n\n    webResource.headers.set(\"x-ms-date\", utcNow);\n    webResource.headers.set(\"x-ms-content-sha256\", contentHash);\n    webResource.headers.set(\n      \"Authorization\",\n      `HMAC-SHA256 Credential=${this.credential}, SignedHeaders=${signedHeaders}, Signature=${signature}`\n    );\n\n    return webResource;\n  }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\n\n\nexport const Key: coreHttp.CompositeMapper = {\n  serializedName: \"Key\",\n  type: {\n    name: \"Composite\",\n    className: \"Key\",\n    modelProperties: {\n      name: {\n        readOnly: true,\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const KeyValue: coreHttp.CompositeMapper = {\n  serializedName: \"KeyValue\",\n  type: {\n    name: \"Composite\",\n    className: \"KeyValue\",\n    modelProperties: {\n      key: {\n        required: true,\n        serializedName: \"key\",\n        type: {\n          name: \"String\"\n        }\n      },\n      label: {\n        serializedName: \"label\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentType: {\n        serializedName: \"content_type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last_modified\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      locked: {\n        serializedName: \"locked\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Label: coreHttp.CompositeMapper = {\n  serializedName: \"Label\",\n  type: {\n    name: \"Composite\",\n    className: \"Label\",\n    modelProperties: {\n      name: {\n        readOnly: true,\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorModel: coreHttp.CompositeMapper = {\n  serializedName: \"Error\",\n  type: {\n    name: \"Composite\",\n    className: \"ErrorModel\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      title: {\n        serializedName: \"title\",\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      detail: {\n        serializedName: \"detail\",\n        type: {\n          name: \"String\"\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const KeyListResult: coreHttp.CompositeMapper = {\n  serializedName: \"KeyListResult\",\n  type: {\n    name: \"Composite\",\n    className: \"KeyListResult\",\n    modelProperties: {\n      items: {\n        serializedName: \"items\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Key\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"@nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const KeyValueListResult: coreHttp.CompositeMapper = {\n  serializedName: \"KeyValueListResult\",\n  type: {\n    name: \"Composite\",\n    className: \"KeyValueListResult\",\n    modelProperties: {\n      items: {\n        serializedName: \"items\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"KeyValue\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"@nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const LabelListResult: coreHttp.CompositeMapper = {\n  serializedName: \"LabelListResult\",\n  type: {\n    name: \"Composite\",\n    className: \"LabelListResult\",\n    modelProperties: {\n      items: {\n        serializedName: \"items\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Label\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"@nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const GetKeysHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"getkeys-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"GetKeysHeaders\",\n    modelProperties: {\n      syncToken: {\n        serializedName: \"sync-token\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CheckKeysHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"checkkeys-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"CheckKeysHeaders\",\n    modelProperties: {\n      syncToken: {\n        serializedName: \"sync-token\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const GetKeyValuesHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"getkeyvalues-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"GetKeyValuesHeaders\",\n    modelProperties: {\n      syncToken: {\n        serializedName: \"sync-token\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CheckKeyValuesHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"checkkeyvalues-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"CheckKeyValuesHeaders\",\n    modelProperties: {\n      syncToken: {\n        serializedName: \"sync-token\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const GetKeyValueHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"getkeyvalue-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"GetKeyValueHeaders\",\n    modelProperties: {\n      syncToken: {\n        serializedName: \"sync-token\",\n        type: {\n          name: \"String\"\n        }\n      },\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModifiedHeader: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PutKeyValueHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"putkeyvalue-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"PutKeyValueHeaders\",\n    modelProperties: {\n      syncToken: {\n        serializedName: \"sync-token\",\n        type: {\n          name: \"String\"\n        }\n      },\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DeleteKeyValueHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"deletekeyvalue-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"DeleteKeyValueHeaders\",\n    modelProperties: {\n      syncToken: {\n        serializedName: \"sync-token\",\n        type: {\n          name: \"String\"\n        }\n      },\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CheckKeyValueHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"checkkeyvalue-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"CheckKeyValueHeaders\",\n    modelProperties: {\n      syncToken: {\n        serializedName: \"sync-token\",\n        type: {\n          name: \"String\"\n        }\n      },\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const GetLabelsHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"getlabels-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"GetLabelsHeaders\",\n    modelProperties: {\n      syncToken: {\n        serializedName: \"sync-token\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CheckLabelsHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"checklabels-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"CheckLabelsHeaders\",\n    modelProperties: {\n      syncToken: {\n        serializedName: \"sync-token\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PutLockHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"putlock-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"PutLockHeaders\",\n    modelProperties: {\n      syncToken: {\n        serializedName: \"sync-token\",\n        type: {\n          name: \"String\"\n        }\n      },\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DeleteLockHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"deletelock-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"DeleteLockHeaders\",\n    modelProperties: {\n      syncToken: {\n        serializedName: \"sync-token\",\n        type: {\n          name: \"String\"\n        }\n      },\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const GetRevisionsHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"getrevisions-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"GetRevisionsHeaders\",\n    modelProperties: {\n      syncToken: {\n        serializedName: \"sync-token\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CheckRevisionsHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"checkrevisions-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"CheckRevisionsHeaders\",\n    modelProperties: {\n      syncToken: {\n        serializedName: \"sync-token\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\n\nexport const acceptDatetime: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"acceptDatetime\"\n  ],\n  mapper: {\n    serializedName: \"Accept-Datetime\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const after: coreHttp.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"after\"\n  ],\n  mapper: {\n    serializedName: \"After\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const apiVersion: coreHttp.OperationQueryParameter = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    required: true,\n    serializedName: \"api-version\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const ifMatch: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"ifMatch\"\n  ],\n  mapper: {\n    serializedName: \"If-Match\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const ifNoneMatch: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"ifNoneMatch\"\n  ],\n  mapper: {\n    serializedName: \"If-None-Match\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const key0: coreHttp.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"key\"\n  ],\n  mapper: {\n    serializedName: \"key\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const key1: coreHttp.OperationURLParameter = {\n  parameterPath: \"key\",\n  mapper: {\n    required: true,\n    serializedName: \"key\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const label: coreHttp.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"label\"\n  ],\n  mapper: {\n    serializedName: \"label\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const name: coreHttp.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"name\"\n  ],\n  mapper: {\n    serializedName: \"name\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const select: coreHttp.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"select\"\n  ],\n  mapper: {\n    serializedName: \"$Select\",\n    type: {\n      name: \"Sequence\",\n      element: {\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  },\n  collectionFormat: coreHttp.QueryCollectionFormat.Csv\n};\nexport const syncToken: coreHttp.OperationParameter = {\n  parameterPath: \"syncToken\",\n  mapper: {\n    serializedName: \"Sync-Token\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\nimport * as Models from \"./models\";\n\nexport class AppConfigurationContext extends coreHttp.ServiceClient {\n  syncToken?: string;\n  apiVersion: string;\n  credentials: coreHttp.TokenCredential | coreHttp.ServiceClientCredentials;\n\n  /**\n   * Initializes a new instance of the AppConfigurationContext class.\n   * @param apiVersion The API version to be used with the HTTP request.\n   * @param credentials Subscription credentials which uniquely identify client subscription.\n   * @param [options] The parameter options\n   */\n  constructor(\n    credentials: coreHttp.TokenCredential | coreHttp.ServiceClientCredentials,\n    apiVersion: string,\n    options?: Models.AppConfigurationOptions\n  ) {\n    if (apiVersion == undefined) {\n      throw new Error(\"'apiVersion' cannot be null.\");\n    }\n    if (credentials == undefined) {\n      throw new Error(\"'credentials' cannot be null.\");\n    }\n\n    if (!options) {\n      options = {};\n    }\n\n    super(credentials, options);\n\n    this.baseUri = options.baseUri || this.baseUri || \"http://localhost\";\n    this.requestContentType = \"application/json; charset=utf-8\";\n    this.apiVersion = apiVersion;\n    this.credentials = credentials;\n    if (options.syncToken !== null && options.syncToken !== undefined) {\n      this.syncToken = options.syncToken;\n    }\n  }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\nimport * as Models from \"./models\";\nimport * as Mappers from \"./models/mappers\";\nimport * as Parameters from \"./models/parameters\";\nimport { AppConfigurationContext } from \"./appConfigurationContext\";\n\nclass AppConfiguration extends AppConfigurationContext {\n  /**\n   * Initializes a new instance of the AppConfiguration class.\n   * @param apiVersion The API version to be used with the HTTP request.\n   * @param credentials Subscription credentials which uniquely identify client subscription.\n   * @param [options] The parameter options\n   */\n  constructor(credentials: coreHttp.TokenCredential | coreHttp.ServiceClientCredentials, apiVersion: string, options?: Models.AppConfigurationOptions) {\n    super(credentials, apiVersion, options);\n  }\n\n  /**\n   * @summary Gets a list of keys.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.GetKeysResponse>\n   */\n  getKeys(options?: Models.AppConfigurationGetKeysOptionalParams): Promise<Models.GetKeysResponse>;\n  /**\n   * @param callback The callback\n   */\n  getKeys(callback: coreHttp.ServiceCallback<Models.KeyListResult>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getKeys(options: Models.AppConfigurationGetKeysOptionalParams, callback: coreHttp.ServiceCallback<Models.KeyListResult>): void;\n  getKeys(options?: Models.AppConfigurationGetKeysOptionalParams | coreHttp.ServiceCallback<Models.KeyListResult>, callback?: coreHttp.ServiceCallback<Models.KeyListResult>): Promise<Models.GetKeysResponse> {\n    return this.sendOperationRequest(\n      {\n        options\n      },\n      getKeysOperationSpec,\n      callback) as Promise<Models.GetKeysResponse>;\n  }\n\n  /**\n   * @summary Requests the headers and status of the given resource.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.CheckKeysResponse>\n   */\n  checkKeys(options?: Models.AppConfigurationCheckKeysOptionalParams): Promise<Models.CheckKeysResponse>;\n  /**\n   * @param callback The callback\n   */\n  checkKeys(callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  checkKeys(options: Models.AppConfigurationCheckKeysOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  checkKeys(options?: Models.AppConfigurationCheckKeysOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.CheckKeysResponse> {\n    return this.sendOperationRequest(\n      {\n        options\n      },\n      checkKeysOperationSpec,\n      callback) as Promise<Models.CheckKeysResponse>;\n  }\n\n  /**\n   * @summary Gets a list of key-values.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.GetKeyValuesResponse>\n   */\n  getKeyValues(options?: Models.AppConfigurationGetKeyValuesOptionalParams): Promise<Models.GetKeyValuesResponse>;\n  /**\n   * @param callback The callback\n   */\n  getKeyValues(callback: coreHttp.ServiceCallback<Models.KeyValueListResult>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getKeyValues(options: Models.AppConfigurationGetKeyValuesOptionalParams, callback: coreHttp.ServiceCallback<Models.KeyValueListResult>): void;\n  getKeyValues(options?: Models.AppConfigurationGetKeyValuesOptionalParams | coreHttp.ServiceCallback<Models.KeyValueListResult>, callback?: coreHttp.ServiceCallback<Models.KeyValueListResult>): Promise<Models.GetKeyValuesResponse> {\n    return this.sendOperationRequest(\n      {\n        options\n      },\n      getKeyValuesOperationSpec,\n      callback) as Promise<Models.GetKeyValuesResponse>;\n  }\n\n  /**\n   * @summary Requests the headers and status of the given resource.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.CheckKeyValuesResponse>\n   */\n  checkKeyValues(options?: Models.AppConfigurationCheckKeyValuesOptionalParams): Promise<Models.CheckKeyValuesResponse>;\n  /**\n   * @param callback The callback\n   */\n  checkKeyValues(callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  checkKeyValues(options: Models.AppConfigurationCheckKeyValuesOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  checkKeyValues(options?: Models.AppConfigurationCheckKeyValuesOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.CheckKeyValuesResponse> {\n    return this.sendOperationRequest(\n      {\n        options\n      },\n      checkKeyValuesOperationSpec,\n      callback) as Promise<Models.CheckKeyValuesResponse>;\n  }\n\n  /**\n   * @summary Gets a single key-value.\n   * @param key The key of the key-value to retrieve.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.GetKeyValueResponse>\n   */\n  getKeyValue(key: string, options?: Models.AppConfigurationGetKeyValueOptionalParams): Promise<Models.GetKeyValueResponse>;\n  /**\n   * @param key The key of the key-value to retrieve.\n   * @param callback The callback\n   */\n  getKeyValue(key: string, callback: coreHttp.ServiceCallback<Models.KeyValue>): void;\n  /**\n   * @param key The key of the key-value to retrieve.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getKeyValue(key: string, options: Models.AppConfigurationGetKeyValueOptionalParams, callback: coreHttp.ServiceCallback<Models.KeyValue>): void;\n  getKeyValue(key: string, options?: Models.AppConfigurationGetKeyValueOptionalParams | coreHttp.ServiceCallback<Models.KeyValue>, callback?: coreHttp.ServiceCallback<Models.KeyValue>): Promise<Models.GetKeyValueResponse> {\n    return this.sendOperationRequest(\n      {\n        key,\n        options\n      },\n      getKeyValueOperationSpec,\n      callback) as Promise<Models.GetKeyValueResponse>;\n  }\n\n  /**\n   * @summary Creates a key-value.\n   * @param key The key of the key-value to create.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.PutKeyValueResponse>\n   */\n  putKeyValue(key: string, options?: Models.AppConfigurationPutKeyValueOptionalParams): Promise<Models.PutKeyValueResponse>;\n  /**\n   * @param key The key of the key-value to create.\n   * @param callback The callback\n   */\n  putKeyValue(key: string, callback: coreHttp.ServiceCallback<Models.KeyValue>): void;\n  /**\n   * @param key The key of the key-value to create.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  putKeyValue(key: string, options: Models.AppConfigurationPutKeyValueOptionalParams, callback: coreHttp.ServiceCallback<Models.KeyValue>): void;\n  putKeyValue(key: string, options?: Models.AppConfigurationPutKeyValueOptionalParams | coreHttp.ServiceCallback<Models.KeyValue>, callback?: coreHttp.ServiceCallback<Models.KeyValue>): Promise<Models.PutKeyValueResponse> {\n    return this.sendOperationRequest(\n      {\n        key,\n        options\n      },\n      putKeyValueOperationSpec,\n      callback) as Promise<Models.PutKeyValueResponse>;\n  }\n\n  /**\n   * @summary Deletes a key-value.\n   * @param key The key of the key-value to delete.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DeleteKeyValueResponse>\n   */\n  deleteKeyValue(key: string, options?: Models.AppConfigurationDeleteKeyValueOptionalParams): Promise<Models.DeleteKeyValueResponse>;\n  /**\n   * @param key The key of the key-value to delete.\n   * @param callback The callback\n   */\n  deleteKeyValue(key: string, callback: coreHttp.ServiceCallback<Models.KeyValue>): void;\n  /**\n   * @param key The key of the key-value to delete.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  deleteKeyValue(key: string, options: Models.AppConfigurationDeleteKeyValueOptionalParams, callback: coreHttp.ServiceCallback<Models.KeyValue>): void;\n  deleteKeyValue(key: string, options?: Models.AppConfigurationDeleteKeyValueOptionalParams | coreHttp.ServiceCallback<Models.KeyValue>, callback?: coreHttp.ServiceCallback<Models.KeyValue>): Promise<Models.DeleteKeyValueResponse> {\n    return this.sendOperationRequest(\n      {\n        key,\n        options\n      },\n      deleteKeyValueOperationSpec,\n      callback) as Promise<Models.DeleteKeyValueResponse>;\n  }\n\n  /**\n   * @summary Requests the headers and status of the given resource.\n   * @param key The key of the key-value to retrieve.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.CheckKeyValueResponse>\n   */\n  checkKeyValue(key: string, options?: Models.AppConfigurationCheckKeyValueOptionalParams): Promise<Models.CheckKeyValueResponse>;\n  /**\n   * @param key The key of the key-value to retrieve.\n   * @param callback The callback\n   */\n  checkKeyValue(key: string, callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param key The key of the key-value to retrieve.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  checkKeyValue(key: string, options: Models.AppConfigurationCheckKeyValueOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  checkKeyValue(key: string, options?: Models.AppConfigurationCheckKeyValueOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.CheckKeyValueResponse> {\n    return this.sendOperationRequest(\n      {\n        key,\n        options\n      },\n      checkKeyValueOperationSpec,\n      callback) as Promise<Models.CheckKeyValueResponse>;\n  }\n\n  /**\n   * @summary Gets a list of labels.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.GetLabelsResponse>\n   */\n  getLabels(options?: Models.AppConfigurationGetLabelsOptionalParams): Promise<Models.GetLabelsResponse>;\n  /**\n   * @param callback The callback\n   */\n  getLabels(callback: coreHttp.ServiceCallback<Models.LabelListResult>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getLabels(options: Models.AppConfigurationGetLabelsOptionalParams, callback: coreHttp.ServiceCallback<Models.LabelListResult>): void;\n  getLabels(options?: Models.AppConfigurationGetLabelsOptionalParams | coreHttp.ServiceCallback<Models.LabelListResult>, callback?: coreHttp.ServiceCallback<Models.LabelListResult>): Promise<Models.GetLabelsResponse> {\n    return this.sendOperationRequest(\n      {\n        options\n      },\n      getLabelsOperationSpec,\n      callback) as Promise<Models.GetLabelsResponse>;\n  }\n\n  /**\n   * @summary Requests the headers and status of the given resource.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.CheckLabelsResponse>\n   */\n  checkLabels(options?: Models.AppConfigurationCheckLabelsOptionalParams): Promise<Models.CheckLabelsResponse>;\n  /**\n   * @param callback The callback\n   */\n  checkLabels(callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  checkLabels(options: Models.AppConfigurationCheckLabelsOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  checkLabels(options?: Models.AppConfigurationCheckLabelsOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.CheckLabelsResponse> {\n    return this.sendOperationRequest(\n      {\n        options\n      },\n      checkLabelsOperationSpec,\n      callback) as Promise<Models.CheckLabelsResponse>;\n  }\n\n  /**\n   * @summary Locks a key-value.\n   * @param key The key of the key-value to lock.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.PutLockResponse>\n   */\n  putLock(key: string, options?: Models.AppConfigurationPutLockOptionalParams): Promise<Models.PutLockResponse>;\n  /**\n   * @param key The key of the key-value to lock.\n   * @param callback The callback\n   */\n  putLock(key: string, callback: coreHttp.ServiceCallback<Models.KeyValue>): void;\n  /**\n   * @param key The key of the key-value to lock.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  putLock(key: string, options: Models.AppConfigurationPutLockOptionalParams, callback: coreHttp.ServiceCallback<Models.KeyValue>): void;\n  putLock(key: string, options?: Models.AppConfigurationPutLockOptionalParams | coreHttp.ServiceCallback<Models.KeyValue>, callback?: coreHttp.ServiceCallback<Models.KeyValue>): Promise<Models.PutLockResponse> {\n    return this.sendOperationRequest(\n      {\n        key,\n        options\n      },\n      putLockOperationSpec,\n      callback) as Promise<Models.PutLockResponse>;\n  }\n\n  /**\n   * @summary Unlocks a key-value.\n   * @param key The key of the key-value to unlock.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DeleteLockResponse>\n   */\n  deleteLock(key: string, options?: Models.AppConfigurationDeleteLockOptionalParams): Promise<Models.DeleteLockResponse>;\n  /**\n   * @param key The key of the key-value to unlock.\n   * @param callback The callback\n   */\n  deleteLock(key: string, callback: coreHttp.ServiceCallback<Models.KeyValue>): void;\n  /**\n   * @param key The key of the key-value to unlock.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  deleteLock(key: string, options: Models.AppConfigurationDeleteLockOptionalParams, callback: coreHttp.ServiceCallback<Models.KeyValue>): void;\n  deleteLock(key: string, options?: Models.AppConfigurationDeleteLockOptionalParams | coreHttp.ServiceCallback<Models.KeyValue>, callback?: coreHttp.ServiceCallback<Models.KeyValue>): Promise<Models.DeleteLockResponse> {\n    return this.sendOperationRequest(\n      {\n        key,\n        options\n      },\n      deleteLockOperationSpec,\n      callback) as Promise<Models.DeleteLockResponse>;\n  }\n\n  /**\n   * @summary Gets a list of key-value revisions.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.GetRevisionsResponse>\n   */\n  getRevisions(options?: Models.AppConfigurationGetRevisionsOptionalParams): Promise<Models.GetRevisionsResponse>;\n  /**\n   * @param callback The callback\n   */\n  getRevisions(callback: coreHttp.ServiceCallback<Models.KeyValueListResult>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getRevisions(options: Models.AppConfigurationGetRevisionsOptionalParams, callback: coreHttp.ServiceCallback<Models.KeyValueListResult>): void;\n  getRevisions(options?: Models.AppConfigurationGetRevisionsOptionalParams | coreHttp.ServiceCallback<Models.KeyValueListResult>, callback?: coreHttp.ServiceCallback<Models.KeyValueListResult>): Promise<Models.GetRevisionsResponse> {\n    return this.sendOperationRequest(\n      {\n        options\n      },\n      getRevisionsOperationSpec,\n      callback) as Promise<Models.GetRevisionsResponse>;\n  }\n\n  /**\n   * @summary Requests the headers and status of the given resource.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.CheckRevisionsResponse>\n   */\n  checkRevisions(options?: Models.AppConfigurationCheckRevisionsOptionalParams): Promise<Models.CheckRevisionsResponse>;\n  /**\n   * @param callback The callback\n   */\n  checkRevisions(callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  checkRevisions(options: Models.AppConfigurationCheckRevisionsOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  checkRevisions(options?: Models.AppConfigurationCheckRevisionsOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.CheckRevisionsResponse> {\n    return this.sendOperationRequest(\n      {\n        options\n      },\n      checkRevisionsOperationSpec,\n      callback) as Promise<Models.CheckRevisionsResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new coreHttp.Serializer(Mappers);\nconst getKeysOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"keys\",\n  queryParameters: [\n    Parameters.name,\n    Parameters.apiVersion,\n    Parameters.after\n  ],\n  headerParameters: [\n    Parameters.syncToken,\n    Parameters.acceptDatetime\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.KeyListResult,\n      headersMapper: Mappers.GetKeysHeaders\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  serializer\n};\n\nconst checkKeysOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"HEAD\",\n  path: \"keys\",\n  queryParameters: [\n    Parameters.name,\n    Parameters.apiVersion,\n    Parameters.after\n  ],\n  headerParameters: [\n    Parameters.syncToken,\n    Parameters.acceptDatetime\n  ],\n  responses: {\n    200: {\n      headersMapper: Mappers.CheckKeysHeaders\n    },\n    default: {}\n  },\n  serializer\n};\n\nconst getKeyValuesOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"kv\",\n  queryParameters: [\n    Parameters.key0,\n    Parameters.label,\n    Parameters.apiVersion,\n    Parameters.after,\n    Parameters.select\n  ],\n  headerParameters: [\n    Parameters.syncToken,\n    Parameters.acceptDatetime\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.KeyValueListResult,\n      headersMapper: Mappers.GetKeyValuesHeaders\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  serializer\n};\n\nconst checkKeyValuesOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"HEAD\",\n  path: \"kv\",\n  queryParameters: [\n    Parameters.key0,\n    Parameters.label,\n    Parameters.apiVersion,\n    Parameters.after,\n    Parameters.select\n  ],\n  headerParameters: [\n    Parameters.syncToken,\n    Parameters.acceptDatetime\n  ],\n  responses: {\n    200: {\n      headersMapper: Mappers.CheckKeyValuesHeaders\n    },\n    default: {}\n  },\n  serializer\n};\n\nconst getKeyValueOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"kv/{key}\",\n  urlParameters: [\n    Parameters.key1\n  ],\n  queryParameters: [\n    Parameters.label,\n    Parameters.apiVersion,\n    Parameters.select\n  ],\n  headerParameters: [\n    Parameters.syncToken,\n    Parameters.acceptDatetime,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.KeyValue,\n      headersMapper: Mappers.GetKeyValueHeaders\n    },\n    304: {\n      headersMapper: Mappers.GetKeyValueHeaders\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  serializer\n};\n\nconst putKeyValueOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"kv/{key}\",\n  urlParameters: [\n    Parameters.key1\n  ],\n  queryParameters: [\n    Parameters.label,\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.syncToken,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch\n  ],\n  requestBody: {\n    parameterPath: [\n      \"options\",\n      \"entity\"\n    ],\n    mapper: Mappers.KeyValue\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.KeyValue,\n      headersMapper: Mappers.PutKeyValueHeaders\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  serializer\n};\n\nconst deleteKeyValueOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"DELETE\",\n  path: \"kv/{key}\",\n  urlParameters: [\n    Parameters.key1\n  ],\n  queryParameters: [\n    Parameters.label,\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.syncToken,\n    Parameters.ifMatch\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.KeyValue,\n      headersMapper: Mappers.DeleteKeyValueHeaders\n    },\n    204: {\n      headersMapper: Mappers.DeleteKeyValueHeaders\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  serializer\n};\n\nconst checkKeyValueOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"HEAD\",\n  path: \"kv/{key}\",\n  urlParameters: [\n    Parameters.key1\n  ],\n  queryParameters: [\n    Parameters.label,\n    Parameters.apiVersion,\n    Parameters.select\n  ],\n  headerParameters: [\n    Parameters.syncToken,\n    Parameters.acceptDatetime,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch\n  ],\n  responses: {\n    200: {\n      headersMapper: Mappers.CheckKeyValueHeaders\n    },\n    304: {\n      headersMapper: Mappers.CheckKeyValueHeaders\n    },\n    default: {}\n  },\n  serializer\n};\n\nconst getLabelsOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"labels\",\n  queryParameters: [\n    Parameters.name,\n    Parameters.apiVersion,\n    Parameters.after,\n    Parameters.select\n  ],\n  headerParameters: [\n    Parameters.syncToken,\n    Parameters.acceptDatetime\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.LabelListResult,\n      headersMapper: Mappers.GetLabelsHeaders\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  serializer\n};\n\nconst checkLabelsOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"HEAD\",\n  path: \"labels\",\n  queryParameters: [\n    Parameters.name,\n    Parameters.apiVersion,\n    Parameters.after,\n    Parameters.select\n  ],\n  headerParameters: [\n    Parameters.syncToken,\n    Parameters.acceptDatetime\n  ],\n  responses: {\n    200: {\n      headersMapper: Mappers.CheckLabelsHeaders\n    },\n    default: {}\n  },\n  serializer\n};\n\nconst putLockOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"locks/{key}\",\n  urlParameters: [\n    Parameters.key1\n  ],\n  queryParameters: [\n    Parameters.label,\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.syncToken,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.KeyValue,\n      headersMapper: Mappers.PutLockHeaders\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  serializer\n};\n\nconst deleteLockOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"DELETE\",\n  path: \"locks/{key}\",\n  urlParameters: [\n    Parameters.key1\n  ],\n  queryParameters: [\n    Parameters.label,\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.syncToken,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.KeyValue,\n      headersMapper: Mappers.DeleteLockHeaders\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  serializer\n};\n\nconst getRevisionsOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"revisions\",\n  queryParameters: [\n    Parameters.key0,\n    Parameters.label,\n    Parameters.apiVersion,\n    Parameters.after,\n    Parameters.select\n  ],\n  headerParameters: [\n    Parameters.syncToken,\n    Parameters.acceptDatetime\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.KeyValueListResult,\n      headersMapper: Mappers.GetRevisionsHeaders\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  serializer\n};\n\nconst checkRevisionsOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"HEAD\",\n  path: \"revisions\",\n  queryParameters: [\n    Parameters.key0,\n    Parameters.label,\n    Parameters.apiVersion,\n    Parameters.after,\n    Parameters.select\n  ],\n  headerParameters: [\n    Parameters.syncToken,\n    Parameters.acceptDatetime\n  ],\n  responses: {\n    200: {\n      headersMapper: Mappers.CheckRevisionsHeaders\n    },\n    default: {}\n  },\n  serializer\n};\n\nexport {\n  AppConfiguration,\n  AppConfigurationContext,\n  Models as AppConfigurationModels,\n  Mappers as AppConfigurationMappers\n};\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport {\n  BaseRequestPolicy,\n  RequestPolicy,\n  RequestPolicyOptions,\n  RequestPolicyFactory,\n  WebResource,\n  HttpOperationResponse,\n  Constants,\n  delay,\n  RestError\n} from \"@azure/core-http\";\n\n/**\n * @internal\n * @ignore\n */\nexport function throttlingRetryPolicy(): RequestPolicyFactory {\n  return {\n    create: (nextPolicy: RequestPolicy, options: RequestPolicyOptions) => {\n      return new ThrottlingRetryPolicy(nextPolicy, options);\n    }\n  };\n}\n\n/**\n * This policy is a close copy of the ThrottlingRetryPolicy class from\n * core-http with modifications to work with how AppConfig is currently\n * responding to 429 responses (which is to throw a RestError).\n *\n * @internal\n * @ignore\n */\nexport class ThrottlingRetryPolicy extends BaseRequestPolicy {\n  constructor(nextPolicy: RequestPolicy, options: RequestPolicyOptions) {\n    super(nextPolicy, options);\n  }\n\n  public async sendRequest(httpRequest: WebResource): Promise<HttpOperationResponse> {\n    return this._nextPolicy.sendRequest(httpRequest.clone()).catch((err) => {\n      if (isRestErrorWithHeaders(err)) {\n        const delayInMs = getDelayInMs(err.response.headers);\n\n        if (delayInMs == null) {\n          throw err;\n        }\n\n        return delay(delayInMs).then((_: any) => this.sendRequest(httpRequest.clone()));\n      } else {\n        throw err;\n      }\n    });\n  }\n\n  static parseRetryAfterHeader(headerValue: string): number | undefined {\n    const retryAfterInSeconds = Number(headerValue);\n    if (Number.isNaN(retryAfterInSeconds)) {\n      return ThrottlingRetryPolicy.parseDateRetryAfterHeader(headerValue);\n    } else {\n      return retryAfterInSeconds * 1000;\n    }\n  }\n\n  static parseDateRetryAfterHeader(headerValue: string): number | undefined {\n    try {\n      const now: number = Date.now();\n      const date: number = Date.parse(headerValue);\n      const diff = date - now;\n\n      return Number.isNaN(diff) ? undefined : diff;\n    } catch (error) {\n      return undefined;\n    }\n  }\n}\n\n/**\n * The headers that come back from Azure services representing\n * the amount of time (minimum) to wait to retry (in milliseconds).\n */\nconst RetryAfterMillisecondsHeaders: string[] = [\"retry-after-ms\", \"x-ms-retry-after-ms\"];\n\n/**\n * Extracts the retry response header, checking against several\n * header names.\n * @internal\n * @ignore\n */\nexport function getDelayInMs(responseHeaders: {\n  get: (headerName: string) => string | undefined;\n}): number | undefined {\n  for (const name of RetryAfterMillisecondsHeaders) {\n    const delayValueString = responseHeaders.get(name);\n\n    if (delayValueString == null) {\n      continue;\n    }\n\n    const delayValueMs: number = Number(delayValueString);\n\n    if (Number.isNaN(delayValueMs)) {\n      return undefined;\n    }\n\n    return delayValueMs;\n  }\n\n  const retryAfterValue = responseHeaders.get(Constants.HeaderConstants.RETRY_AFTER);\n\n  if (retryAfterValue != null) {\n    return ThrottlingRetryPolicy.parseRetryAfterHeader(retryAfterValue);\n  }\n\n  return undefined;\n}\n\ntype RestErrorWithHeaders = Pick<RestError, Exclude<keyof RestError, \"response\">> & {\n  response: HttpOperationResponse;\n};\n\nfunction isRestErrorWithHeaders(err: any): err is RestErrorWithHeaders {\n  return (\n    err &&\n    err.statusCode &&\n    typeof err.statusCode === \"number\" &&\n    err.response &&\n    err.response.headers &&\n    typeof err.response.headers.get === \"function\"\n  );\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { ListConfigurationSettingsOptions } from \"..\";\nimport { URLBuilder } from \"@azure/core-http\";\nimport {\n  ListRevisionsOptions,\n  ConfigurationSettingId,\n  ConfigurationSetting,\n  HttpResponseField,\n  HttpResponseFields,\n  HttpOnlyIfChangedField,\n  HttpOnlyIfUnchangedField\n} from \"../models\";\nimport { AppConfigurationGetKeyValuesOptionalParams, KeyValue } from \"../generated/src/models\";\n\n/**\n * Formats the etag so it can be used with a If-Match/If-None-Match header\n * @internal\n * @ignore\n */\nexport function quoteETag(etag: string | undefined): string | undefined {\n  // https://tools.ietf.org/html/rfc7232#section-3.1\n  if (etag === undefined || etag === \"*\") {\n    return etag;\n  }\n\n  if (etag.startsWith('\"') && etag.endsWith('\"')) {\n    return etag;\n  }\n\n  if (etag.startsWith(\"'\") && etag.endsWith(\"'\")) {\n    return etag;\n  }\n\n  return `\"${etag}\"`;\n}\n\n/**\n * Checks the onlyIfChanged/onlyIfUnchanged properties to make sure we haven't specified both\n * and throws an Error. Otherwise, returns the properties properly quoted.\n * @param options An options object with onlyIfChanged/onlyIfUnchanged fields\n * @internal\n * @ignore\n */\nexport function checkAndFormatIfAndIfNoneMatch(\n  configurationSetting: ConfigurationSettingId,\n  options: HttpOnlyIfChangedField & HttpOnlyIfUnchangedField\n): { ifMatch: string | undefined; ifNoneMatch: string | undefined } {\n  if (options.onlyIfChanged && options.onlyIfUnchanged) {\n    throw new Error(\"onlyIfChanged and onlyIfUnchanged are mutually-exclusive\");\n  }\n\n  let ifMatch;\n  let ifNoneMatch;\n\n  if (options.onlyIfUnchanged) {\n    ifMatch = quoteETag(configurationSetting.etag);\n  }\n\n  if (options.onlyIfChanged) {\n    ifNoneMatch = quoteETag(configurationSetting.etag);\n  }\n\n  return {\n    ifMatch: ifMatch,\n    ifNoneMatch: ifNoneMatch\n  };\n}\n\n/**\n * Transforms the keys/labels parameters in the listConfigurationSettings and listRevisions\n * into the format the REST call will need.\n *\n * @internal\n * @ignore\n */\nexport function formatWildcards(\n  listConfigOptions: ListConfigurationSettingsOptions | ListRevisionsOptions\n): Pick<AppConfigurationGetKeyValuesOptionalParams, \"key\" | \"label\" | \"select\" | \"acceptDatetime\"> {\n  let fieldsToGet: (keyof KeyValue)[] | undefined;\n\n  if (listConfigOptions.fields) {\n    fieldsToGet = listConfigOptions.fields.map((opt) => {\n      if (opt === \"isReadOnly\") {\n        return \"locked\";\n      }\n\n      return opt;\n    });\n  }\n\n  let acceptDatetime: string | undefined = undefined;\n\n  if (listConfigOptions.acceptDateTime) {\n    acceptDatetime = listConfigOptions.acceptDateTime.toISOString();\n  }\n\n  return {\n    key: listConfigOptions.keyFilter,\n    label: listConfigOptions.labelFilter,\n    acceptDatetime,\n    select: fieldsToGet\n  };\n}\n\n/**\n * Handles translating a Date acceptDateTime into a string as needed by the API\n * @param newOptions A newer style options with acceptDateTime as a date (and with proper casing!)\n * @internal\n * @ignore\n */\nexport function formatAcceptDateTime(newOptions: {\n  acceptDateTime?: Date;\n}): { acceptDatetime?: string } {\n  return {\n    acceptDatetime: newOptions.acceptDateTime && newOptions.acceptDateTime.toISOString()\n  };\n}\n\n/**\n * Take the URL that gets returned from next link and extract the 'after' token needed\n * to get the next page of results.\n * @internal\n * @ignore\n */\nexport function extractAfterTokenFromNextLink(nextLink: string) {\n  let parsedLink = URLBuilder.parse(nextLink);\n  let afterToken = parsedLink.getQueryParameterValue(\"after\");\n\n  if (afterToken == null || Array.isArray(afterToken)) {\n    throw new Error(\"Invalid nextLink - invalid after token\");\n  }\n\n  return decodeURIComponent(afterToken);\n}\n\n/**\n * Makes a ConfigurationSetting-based response throw for all of the data members. Used primarily\n * to prevent possible errors by the user in accessing a model that is uninitialized. This can happen\n * in cases like HTTP status code 204 or 304, which return an empty response body.\n *\n * @param configurationSetting The configuration setting to alter\n */\nexport function makeConfigurationSettingEmpty(\n  configurationSetting: Partial<Record<Exclude<keyof ConfigurationSetting, \"key\">, any>>\n) {\n  const names: Exclude<keyof ConfigurationSetting, \"key\">[] = [\n    \"contentType\",\n    \"etag\",\n    \"label\",\n    \"lastModified\",\n    \"isReadOnly\",\n    \"tags\",\n    \"value\"\n  ];\n\n  for (const name of names) {\n    configurationSetting[name] = undefined;\n  }\n}\n\n/**\n * @ignore\n * @internal\n */\nexport function transformKeyValue(kvp: KeyValue): ConfigurationSetting {\n  const obj: ConfigurationSetting & KeyValue = {\n    ...kvp,\n    isReadOnly: !!kvp.locked\n  };\n\n  delete obj.locked;\n  return obj;\n}\n\n/**\n * @ignore\n * @internal\n */\nexport function transformKeyValueResponseWithStatusCode<\n  T extends KeyValue & HttpResponseField<any>\n>(kvp: T): ConfigurationSetting & { eTag?: string } & HttpResponseField<any> & HttpResponseFields {\n  return normalizeResponse(kvp, <\n    ConfigurationSetting & HttpResponseField<any> & HttpResponseFields\n  >{\n    ...transformKeyValue(kvp),\n    statusCode: kvp._response.status\n  });\n}\n\n/**\n * @ignore\n * @internal\n */\nexport function transformKeyValueResponse<\n  T extends KeyValue & { eTag?: string } & HttpResponseField<any>\n>(kvp: T): ConfigurationSetting & HttpResponseField<any> {\n  return normalizeResponse(kvp, <ConfigurationSetting & HttpResponseField<any>>{\n    ...transformKeyValue(kvp)\n  });\n}\n\nfunction normalizeResponse<T extends HttpResponseField<any> & { eTag?: string }>(\n  originalResponse: HttpResponseField<any>,\n  newResponse: T\n): T {\n  Object.defineProperty(newResponse, \"_response\", {\n    enumerable: false,\n    value: originalResponse._response\n  });\n\n  // this field comes from the header but it's redundant with\n  // the one serialized in the model itself\n  delete newResponse.eTag;\n\n  return newResponse;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { getTracer } from \"@azure/core-tracing\";\nimport { Span, SpanKind, CanonicalCode } from \"@opentelemetry/api\";\nimport { SpanOptions } from \"@azure/core-tracing\";\n\nimport { RestError } from \"@azure/core-http\";\n\n/**\n * @internal\n * @ignore\n */\nexport interface Spannable {\n  spanOptions?: SpanOptions;\n}\n\n/**\n * @internal\n * @ignore\n */\nexport class Spanner<TClient> {\n  constructor(private baseOperationName: string) {}\n\n  /**\n   * Traces an operation and properly handles reporting start, end and errors for a given span\n   *\n   * @param operationName Name of a method in the TClient type\n   * @param options An options class, typically derived from @azure/core-http/RequestOptionsBase\n   * @param fn The function to call with an options class that properly propagates the span context\n   * @param translateToCanonicalCodeFn An optional function to translate thrown errors into a CanonicalCode for the span\n   */\n  async trace<OptionsT extends Spannable, ReturnT>(\n    operationName: keyof TClient,\n    options: OptionsT,\n    fn: (options: OptionsT, span: Span) => Promise<ReturnT>,\n    translateToCanonicalCodeFn: (err: Error) => CanonicalCode = Spanner.getCanonicalCode\n  ): Promise<ReturnT> {\n    const { newOptions, span } = this.createSpan<OptionsT>(options, operationName);\n\n    try {\n      return await fn(newOptions, span);\n    } catch (err) {\n      span.setStatus({\n        code: translateToCanonicalCodeFn(err),\n        message: err.message\n      });\n      throw err;\n    } finally {\n      span.end();\n    }\n  }\n\n  private createSpan<T extends Spannable>(options: T, operationName: keyof TClient) {\n    const span = getTracer().startSpan(`${this.baseOperationName}.${operationName}`, {\n      ...options.spanOptions,\n      kind: SpanKind.INTERNAL\n    });\n    span.setAttribute(\"az.namespace\", \"Microsoft.AppConfiguration\");\n\n    let newOptions = options;\n\n    if (span.isRecording()) {\n      newOptions = Spanner.addParentToOptions<T>(options, span);\n    }\n    return { span, newOptions };\n  }\n\n  static getCanonicalCode(err: Error) {\n    if (Spanner.isRestError(err)) {\n      switch (err.statusCode) {\n        case 401:\n          return CanonicalCode.PERMISSION_DENIED;\n        case 404:\n          return CanonicalCode.NOT_FOUND;\n        case 412:\n          return CanonicalCode.FAILED_PRECONDITION;\n      }\n    }\n\n    return CanonicalCode.UNKNOWN;\n  }\n\n  static isRestError(err: Error): err is RestError {\n    return err instanceof RestError;\n  }\n\n  static addParentToOptions<T extends Spannable>(options: T, span: Span): T {\n    const spanOptions = options.spanOptions || {};\n    return {\n      ...options,\n      spanOptions: {\n        ...spanOptions,\n        parent: span.context(),\n        attributes: {\n          ...spanOptions.attributes,\n          \"az.namespace\": \"Microsoft.AppConfiguration\"\n        }\n      }\n    };\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport {\n  RequestPolicy,\n  RequestPolicyOptions,\n  BaseRequestPolicy,\n  WebResource,\n  HttpOperationResponse,\n  RequestPolicyFactory\n} from \"@azure/core-http\";\n\n/**\n * The sync token header, as described here:\n * https://github.com/Azure/AppConfiguration/blob/master/docs/REST/consistency.md\n * @internal\n * @ignore\n */\nexport const SyncTokenHeaderName = \"sync-token\";\n\n/**\n * A policy factory for injecting sync tokens properly into outgoing requests.\n * @param syncTokens\n * @internal\n * @ignore\n */\nexport function syncTokenPolicy(syncTokens: SyncTokens): RequestPolicyFactory {\n  return {\n    create: (nextPolicy: RequestPolicy, options: RequestPolicyOptions) => {\n      return new SyncTokenPolicy(nextPolicy, options, syncTokens);\n    }\n  };\n}\n\nclass SyncTokenPolicy extends BaseRequestPolicy {\n  constructor(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions,\n    private _syncTokens: SyncTokens\n  ) {\n    super(nextPolicy, options);\n  }\n\n  public async sendRequest(webResource: WebResource): Promise<HttpOperationResponse> {\n    const syncTokenHeaderValue = this._syncTokens.getSyncTokenHeaderValue();\n\n    if (syncTokenHeaderValue != null) {\n      webResource.headers.set(SyncTokenHeaderName, syncTokenHeaderValue);\n    }\n\n    const response = await this._nextPolicy.sendRequest(webResource);\n    this._syncTokens.addSyncTokenFromHeaderValue(response.headers.get(SyncTokenHeaderName));\n    return response;\n  }\n}\n\n/**\n * Sync token tracker (allows for real-time consistency, even in the face of\n * caching and load balancing within App Configuration).\n *\n * (protocol and format described here)\n * https://github.com/Azure/AppConfiguration/blob/master/docs/REST/consistency.md\n *\n * @internal\n * @ignore\n */\nexport class SyncTokens {\n  private _currentSyncTokens = new Map<string, SyncToken>();\n\n  constructor() {}\n\n  /**\n   * Takes the value from the header named after the constant `SyncTokenHeaderName`\n   * and adds it to our list of accumulated sync tokens.\n   *\n   * If given an empty value (or undefined) it clears the current list of sync tokens.\n   * (indicates the service has properly absorbed values into the cluster).\n   *\n   * @param syncTokenHeaderValue The full value of the sync token header.\n   */\n  addSyncTokenFromHeaderValue(syncTokenHeaderValue: string | undefined) {\n    if (syncTokenHeaderValue == null || syncTokenHeaderValue === \"\") {\n      // eventually everything gets synced up and we don't have to track\n      // these headers anymore\n      this._currentSyncTokens.clear();\n      return;\n    }\n\n    const newTokens = syncTokenHeaderValue.split(\",\").map(parseSyncToken);\n\n    for (const newToken of newTokens) {\n      const existingToken = this._currentSyncTokens.get(newToken.id);\n\n      if (!existingToken || existingToken.sequenceNumber < newToken.sequenceNumber) {\n        this._currentSyncTokens.set(newToken.id, newToken);\n        continue;\n      }\n    }\n  }\n\n  /**\n   * Gets a properly formatted SyncToken header value.\n   */\n  getSyncTokenHeaderValue(): string | undefined {\n    if (this._currentSyncTokens.size === 0) {\n      return undefined;\n    }\n\n    const syncTokenStrings = [];\n\n    for (const syncToken of this._currentSyncTokens.values()) {\n      // note that you don't include the 'sn' field here - that's only\n      // used for internal tracking of the 'version' for the token itself\n      syncTokenStrings.push(`${syncToken.id}=${syncToken.value}`);\n    }\n\n    return syncTokenStrings.join(\",\");\n  }\n}\n\n// An example sync token (from their documentation):\n//\n// jtqGc1I4=MDoyOA==;sn=28\n//\n// Which breaks down to:\n// id: jtqGc1I4\n// value: MDoyOA==\n// sequence number: 28\nconst syncTokenRegex = /^([^=]+)=([^;]+);sn=(\\d+)$/;\n\ninterface SyncToken {\n  id: string;\n  value: string;\n  sequenceNumber: number;\n}\n\n/**\n * Parses a single sync token into it's constituent parts.\n *\n * @param syncToken A single sync token.\n *\n * @internal\n * @ignore\n */\nexport function parseSyncToken(syncToken: string): SyncToken {\n  const matches = syncToken.match(syncTokenRegex);\n\n  if (matches == null) {\n    throw new Error(\n      `Failed to parse sync token '${syncToken}' with regex ${syncTokenRegex.source}`\n    );\n  }\n\n  const sequenceNumber = parseInt(matches[3], 10);\n\n  if (isNaN(sequenceNumber)) {\n    // this should be impossible since our regex restricts to just digits\n    // but there's nothing wrong with being thorough.\n    throw new Error(`${syncToken}: The sequence number value '${matches[3]}' wasn't a number`);\n  }\n\n  return {\n    id: matches[1],\n    value: matches[2],\n    sequenceNumber\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n// https://azure.github.io/azure-sdk/typescript_design.html#ts-config-lib\n/// <reference lib=\"esnext.asynciterable\" />\n\nimport { AppConfigCredential } from \"./appConfigCredential\";\nimport { AppConfiguration } from \"./generated/src/appConfiguration\";\nimport { PageSettings, PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport {\n  operationOptionsToRequestOptionsBase,\n  isTokenCredential,\n  exponentialRetryPolicy,\n  systemErrorRetryPolicy,\n  ServiceClientCredentials,\n  UserAgentOptions,\n  getDefaultUserAgentValue as getCoreHttpDefaultUserAgentValue,\n  userAgentPolicy\n} from \"@azure/core-http\";\nimport { throttlingRetryPolicy } from \"./policies/throttlingRetryPolicy\";\nimport { TokenCredential } from \"@azure/identity\";\n\nimport \"@azure/core-asynciterator-polyfill\";\n\nimport {\n  AddConfigurationSettingOptions,\n  AddConfigurationSettingParam,\n  AddConfigurationSettingResponse,\n  ConfigurationSetting,\n  ConfigurationSettingId,\n  DeleteConfigurationSettingOptions,\n  DeleteConfigurationSettingResponse,\n  GetConfigurationSettingOptions,\n  GetConfigurationSettingResponse,\n  ListConfigurationSettingPage,\n  ListConfigurationSettingsOptions,\n  ListRevisionsOptions,\n  ListRevisionsPage,\n  SetConfigurationSettingOptions,\n  SetConfigurationSettingParam,\n  SetConfigurationSettingResponse,\n  SetReadOnlyOptions,\n  SetReadOnlyResponse\n} from \"./models\";\nimport {\n  checkAndFormatIfAndIfNoneMatch,\n  extractAfterTokenFromNextLink,\n  formatWildcards,\n  makeConfigurationSettingEmpty,\n  transformKeyValueResponse,\n  transformKeyValueResponseWithStatusCode,\n  transformKeyValue,\n  formatAcceptDateTime\n} from \"./internal/helpers\";\nimport { tracingPolicy } from \"@azure/core-http\";\nimport { Spanner } from \"./internal/tracingHelpers\";\nimport {\n  GetKeyValuesResponse,\n  AppConfigurationOptions as GeneratedAppConfigurationClientOptions\n} from \"./generated/src/models\";\nimport { syncTokenPolicy, SyncTokens } from \"./internal/synctokenpolicy\";\n\nconst packageName = \"azsdk-js-app-configuration\";\n\n/**\n * This constant should always be the same as the package.json's version - we use it when forming the\n * User - Agent header. There's a unit test that makes sure it always stays in sync.\n * @internal\n * @ignore\n */\nexport const packageVersion = \"1.1.0\";\nconst apiVersion = \"1.0\";\nconst ConnectionStringRegex = /Endpoint=(.*);Id=(.*);Secret=(.*)/;\nconst deserializationContentTypes = {\n  json: [\n    \"application/vnd.microsoft.appconfig.kvset+json\",\n    \"application/vnd.microsoft.appconfig.kv+json\",\n    \"application/vnd.microsoft.appconfig.kvs+json\",\n    \"application/vnd.microsoft.appconfig.keyset+json\",\n    \"application/vnd.microsoft.appconfig.revs+json\"\n  ]\n};\n\n/**\n * Provides configuration options for AppConfigurationClient.\n */\nexport interface AppConfigurationClientOptions {\n  // NOTE: AppConfigurationClient is currently using it's own version of the ThrottlingRetryPolicy\n  // which we are going to unify with core-http. When we do that we can have this options\n  // interface extend PipelineOptions, and also switch over to using`createPipelineFromOptions`\n  // which will auto-create all of these policies and remove a lot of code.\n  //\n  // In the meantime we'll just deal with having our own interface that's compatible with PipelineOptions\n  // for the small subset we absolutely need to support.\n\n  /**\n   * Options for adding user agent details to outgoing requests.\n   */\n  userAgentOptions?: UserAgentOptions;\n}\n\n/**\n * Provides internal configuration options for AppConfigurationClient.\n * @internal\n * @ignore\n */\nexport interface InternalAppConfigurationClientOptions extends AppConfigurationClientOptions {\n  /**\n   * The sync token cache to use for this client.\n   * NOTE: this is an internal option, not for general client usage.\n   */\n  syncTokens?: SyncTokens;\n}\n\n/**\n * Client for the Azure App Configuration service.\n */\nexport class AppConfigurationClient {\n  private client: AppConfiguration;\n  private spanner: Spanner<AppConfigurationClient>;\n\n  /**\n   * Initializes a new instance of the AppConfigurationClient class.\n   * @param connectionString Connection string needed for a client to connect to Azure.\n   * @param options Options for the AppConfigurationClient.\n   */\n  constructor(connectionString: string, options?: AppConfigurationClientOptions);\n  /**\n   * Initializes a new instance of the AppConfigurationClient class using\n   * a TokenCredential.\n   * @param endpoint The endpoint of the App Configuration service (ex: https://sample.azconfig.io).\n   * @param tokenCredential An object that implements the `TokenCredential` interface used to authenticate requests to the service. Use the @azure/identity package to create a credential that suits your needs.\n   * @param options Options for the AppConfigurationClient.\n   */\n  constructor(\n    endpoint: string,\n    tokenCredential: TokenCredential,\n    options?: AppConfigurationClientOptions\n  );\n  constructor(\n    connectionStringOrEndpoint: string,\n    tokenCredentialOrOptions?: TokenCredential | AppConfigurationClientOptions,\n    options?: AppConfigurationClientOptions\n  ) {\n    let appConfigOptions: InternalAppConfigurationClientOptions = {};\n    let appConfigCredential: ServiceClientCredentials | TokenCredential;\n    let appConfigEndpoint: string;\n\n    if (isTokenCredential(tokenCredentialOrOptions)) {\n      appConfigOptions = (options as InternalAppConfigurationClientOptions) || {};\n      appConfigCredential = tokenCredentialOrOptions;\n      appConfigEndpoint = connectionStringOrEndpoint;\n    } else {\n      appConfigOptions = (tokenCredentialOrOptions as InternalAppConfigurationClientOptions) || {};\n\n      const regexMatch = connectionStringOrEndpoint.match(ConnectionStringRegex);\n\n      if (regexMatch) {\n        appConfigCredential = new AppConfigCredential(regexMatch[2], regexMatch[3]);\n        appConfigEndpoint = regexMatch[1];\n      } else {\n        throw new Error(\n          `Invalid connection string. Valid connection strings should match the regex '${ConnectionStringRegex.source}'.`\n        );\n      }\n    }\n\n    const syncTokens = appConfigOptions.syncTokens || new SyncTokens();\n\n    this.client = new AppConfiguration(\n      appConfigCredential,\n      apiVersion,\n      getGeneratedClientOptions(appConfigEndpoint, syncTokens, appConfigOptions)\n    );\n\n    this.spanner = new Spanner<AppConfigurationClient>(\"Azure.Data.AppConfiguration\");\n  }\n\n  /**\n   * Add a setting into the Azure App Configuration service, failing if it\n   * already exists.\n   *\n   * Example usage:\n   * ```ts\n   * const result = await client.addConfigurationSetting({ key: \"MyKey\", label: \"MyLabel\", value: \"MyValue\" });\n   * ```\n   * @param configurationSetting A configuration setting.\n   * @param options Optional parameters for the request.\n   */\n  addConfigurationSetting(\n    configurationSetting: AddConfigurationSettingParam,\n    options: AddConfigurationSettingOptions = {}\n  ): Promise<AddConfigurationSettingResponse> {\n    const opts = operationOptionsToRequestOptionsBase(options);\n    return this.spanner.trace(\"addConfigurationSetting\", opts, async (newOptions) => {\n      const originalResponse = await this.client.putKeyValue(configurationSetting.key, {\n        ifNoneMatch: \"*\",\n        label: configurationSetting.label,\n        entity: configurationSetting,\n        ...newOptions\n      });\n\n      return transformKeyValueResponse(originalResponse);\n    });\n  }\n\n  /**\n   * Delete a setting from the Azure App Configuration service\n   *\n   * Example usage:\n   * ```ts\n   * const deletedSetting = await client.deleteConfigurationSetting({ key: \"MyKey\", label: \"MyLabel\" });\n   * ```\n   * @param id The id of the configuration setting to delete.\n   * @param options Optional parameters for the request (ex: etag, label)\n   */\n  deleteConfigurationSetting(\n    id: ConfigurationSettingId,\n    options: DeleteConfigurationSettingOptions = {}\n  ): Promise<DeleteConfigurationSettingResponse> {\n    const opts = operationOptionsToRequestOptionsBase(options);\n    return this.spanner.trace(\"deleteConfigurationSetting\", opts, async (newOptions) => {\n      const originalResponse = await this.client.deleteKeyValue(id.key, {\n        label: id.label,\n        ...newOptions,\n        ...checkAndFormatIfAndIfNoneMatch(id, options)\n      });\n\n      return transformKeyValueResponseWithStatusCode(originalResponse);\n    });\n  }\n\n  /**\n   * Gets a setting from the Azure App Configuration service.\n   *\n   * Example code:\n   * ```ts\n   * const setting = await client.getConfigurationSetting({ key: \"MyKey\", label: \"MyLabel\" });\n   * ```\n   * @param id The id of the configuration setting to get.\n   * @param options Optional parameters for the request.\n   */\n  async getConfigurationSetting(\n    id: ConfigurationSettingId,\n    options: GetConfigurationSettingOptions = {}\n  ): Promise<GetConfigurationSettingResponse> {\n    const opts = operationOptionsToRequestOptionsBase(options);\n    return await this.spanner.trace(\"getConfigurationSetting\", opts, async (newOptions) => {\n      const originalResponse = await this.client.getKeyValue(id.key, {\n        label: id.label,\n        select: newOptions.fields,\n        ...newOptions,\n        ...formatAcceptDateTime(options),\n        ...checkAndFormatIfAndIfNoneMatch(id, options)\n      });\n\n      const response: GetConfigurationSettingResponse = transformKeyValueResponseWithStatusCode(\n        originalResponse\n      );\n\n      // 304 only comes back if the user has passed a conditional option in their\n      // request _and_ the remote object has the same etag as what the user passed.\n      if (response.statusCode === 304) {\n        // this is one of our few 'required' fields so we'll make sure it does get initialized\n        // with a value\n        response.key = id.key;\n\n        // and now we'll undefine all the other properties that are not HTTP related\n        makeConfigurationSettingEmpty(response);\n      }\n\n      return response;\n    });\n  }\n\n  /**\n   * Lists settings from the Azure App Configuration service, optionally\n   * filtered by key names, labels and accept datetime.\n   *\n   * Example code:\n   * ```ts\n   * const allSettingsWithLabel = client.listConfigurationSettings({ labels: [ \"MyLabel\" ] });\n   * ```\n   * @param options Optional parameters for the request.\n   */\n  listConfigurationSettings(\n    options: ListConfigurationSettingsOptions = {}\n  ): PagedAsyncIterableIterator<ConfigurationSetting, ListConfigurationSettingPage> {\n    const iter = this.getListConfigurationSettingsIterator(options);\n\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (_: PageSettings = {}) => {\n        // The appconfig service doesn't currently support letting you select a page size\n        // so we're ignoring their setting for now.\n        return this.listConfigurationSettingsByPage(options);\n      }\n    };\n  }\n\n  private async *getListConfigurationSettingsIterator(\n    options: ListConfigurationSettingsOptions\n  ): AsyncIterableIterator<ConfigurationSetting> {\n    for await (const page of this.listConfigurationSettingsByPage(options)) {\n      for (const configurationSetting of page.items) {\n        yield configurationSetting;\n      }\n    }\n  }\n\n  private async *listConfigurationSettingsByPage(\n    options: ListConfigurationSettingsOptions = {}\n  ): AsyncIterableIterator<ListConfigurationSettingPage> {\n    const opts = operationOptionsToRequestOptionsBase(options);\n    let currentResponse = await this.spanner.trace(\n      \"listConfigurationSettings\",\n      opts,\n      async (newOptions) => {\n        const response = await this.client.getKeyValues({\n          ...newOptions,\n          ...formatAcceptDateTime(options),\n          ...formatWildcards(newOptions)\n        });\n\n        return response;\n      }\n    );\n\n    yield* this.createListConfigurationPageFromResponse(currentResponse);\n\n    while (currentResponse.nextLink) {\n      currentResponse = await this.spanner.trace(\n        \"listConfigurationSettings\",\n        opts,\n        // TODO: same code up above. Unify.\n        async (newOptions) => {\n          const response = await this.client.getKeyValues({\n            ...newOptions,\n            ...formatWildcards(newOptions),\n            after: extractAfterTokenFromNextLink(currentResponse.nextLink!)\n          });\n\n          return response;\n        }\n      );\n\n      if (!currentResponse.items) {\n        break;\n      }\n\n      yield* this.createListConfigurationPageFromResponse(currentResponse);\n    }\n  }\n\n  private *createListConfigurationPageFromResponse(currentResponse: GetKeyValuesResponse) {\n    yield {\n      ...currentResponse,\n      items: currentResponse.items != null ? currentResponse.items.map(transformKeyValue) : []\n    };\n  }\n\n  /**\n   * Lists revisions of a set of keys, optionally filtered by key names,\n   * labels and accept datetime.\n   *\n   * Example code:\n   * ```ts\n   * const revisionsIterator = client.listRevisions({ keys: [\"MyKey\"] });\n   * ```\n   * @param options Optional parameters for the request.\n   */\n  listRevisions(\n    options?: ListRevisionsOptions\n  ): PagedAsyncIterableIterator<ConfigurationSetting, ListRevisionsPage> {\n    const iter = this.getListRevisionsIterator(options);\n\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (_: PageSettings = {}) => {\n        // The appconfig service doesn't currently support letting you select a page size\n        // so we're ignoring their setting for now.\n        return this.listRevisionsByPage(options);\n      }\n    };\n  }\n\n  private async *getListRevisionsIterator(\n    options?: ListRevisionsOptions\n  ): AsyncIterableIterator<ConfigurationSetting> {\n    for await (const page of this.listRevisionsByPage(options)) {\n      for (const item of page.items) {\n        yield item;\n      }\n    }\n  }\n\n  private async *listRevisionsByPage(\n    options: ListRevisionsOptions = {}\n  ): AsyncIterableIterator<ListRevisionsPage> {\n    const opts = operationOptionsToRequestOptionsBase(options);\n    let currentResponse = await this.spanner.trace(\"listRevisions\", opts, async (newOptions) => {\n      const response = await this.client.getRevisions({\n        ...newOptions,\n        ...formatAcceptDateTime(options),\n        ...formatWildcards(newOptions)\n      });\n\n      return response;\n    });\n\n    yield {\n      ...currentResponse,\n      items: currentResponse.items != null ? currentResponse.items.map(transformKeyValue) : []\n    };\n\n    while (currentResponse.nextLink) {\n      currentResponse = await this.spanner.trace(\"listRevisions\", opts, (newOptions) => {\n        return this.client.getRevisions({\n          ...newOptions,\n          ...formatWildcards(newOptions),\n          select: newOptions.fields,\n          after: extractAfterTokenFromNextLink(currentResponse.nextLink!)\n        });\n      });\n\n      if (!currentResponse.items) {\n        break;\n      }\n\n      yield {\n        ...currentResponse,\n        items: currentResponse.items != null ? currentResponse.items.map(transformKeyValue) : []\n      };\n    }\n  }\n\n  /**\n   * Sets the value of a key in the Azure App Configuration service, allowing for an optional etag.\n   * @param key The name of the key.\n   * @param configurationSetting A configuration value.\n   * @param options Optional parameters for the request.\n   *\n   * Example code:\n   * ```ts\n   * await client.setConfigurationSetting({ key: \"MyKey\", value: \"MyValue\" });\n   * ```\n   */\n  async setConfigurationSetting(\n    configurationSetting: SetConfigurationSettingParam,\n    options: SetConfigurationSettingOptions = {}\n  ): Promise<SetConfigurationSettingResponse> {\n    const opts = operationOptionsToRequestOptionsBase(options);\n\n    return await this.spanner.trace(\"setConfigurationSetting\", opts, async (newOptions) => {\n      const response = await this.client.putKeyValue(configurationSetting.key, {\n        ...newOptions,\n        label: configurationSetting.label,\n        entity: configurationSetting,\n        ...checkAndFormatIfAndIfNoneMatch(configurationSetting, options)\n      });\n\n      return transformKeyValueResponse(response);\n    });\n  }\n\n  /**\n   * Sets or clears a key's read-only status.\n   * @param id The id of the configuration setting to modify.\n   */\n  async setReadOnly(\n    id: ConfigurationSettingId,\n    readOnly: boolean,\n    options: SetReadOnlyOptions = {}\n  ): Promise<SetReadOnlyResponse> {\n    const opts = operationOptionsToRequestOptionsBase(options);\n\n    return this.spanner.trace(\"setReadOnly\", opts, async (newOptions) => {\n      if (readOnly) {\n        const response = await this.client.putLock(id.key, {\n          ...newOptions,\n          label: id.label,\n          ...checkAndFormatIfAndIfNoneMatch(id, options)\n        });\n\n        return transformKeyValueResponse(response);\n      } else {\n        const response = await this.client.deleteLock(id.key, {\n          ...newOptions,\n          label: id.label,\n          ...checkAndFormatIfAndIfNoneMatch(id, options)\n        });\n\n        return transformKeyValueResponse(response);\n      }\n    });\n  }\n}\n\n/**\n * Gets the options for the generated AppConfigurationClient\n * @internal\n * @ignore\n */\nexport function getGeneratedClientOptions(\n  baseUri: string,\n  syncTokens: SyncTokens,\n  internalAppConfigOptions: InternalAppConfigurationClientOptions\n): GeneratedAppConfigurationClientOptions {\n  const retryPolicies = [\n    exponentialRetryPolicy(),\n    systemErrorRetryPolicy(),\n    throttlingRetryPolicy()\n  ];\n\n  const userAgent = getUserAgentPrefix(\n    internalAppConfigOptions.userAgentOptions &&\n      internalAppConfigOptions.userAgentOptions.userAgentPrefix\n  );\n\n  return {\n    baseUri,\n    deserializationContentTypes,\n    // we'll add in our own custom retry policies\n    noRetryPolicy: true,\n    requestPolicyFactories: (defaults) => [\n      tracingPolicy({ userAgent }),\n      syncTokenPolicy(syncTokens),\n      userAgentPolicy({ value: userAgent }),\n      ...retryPolicies,\n      ...defaults\n    ],\n    generateClientRequestIdHeader: true\n  };\n}\n\n/**\n * @internal\n * @ignore\n */\nexport function getUserAgentPrefix(userSuppliedUserAgent: string | undefined): string {\n  const appConfigDefaultUserAgent = `${packageName}/${packageVersion} ${getCoreHttpDefaultUserAgentValue()}`;\n\n  if (!userSuppliedUserAgent) {\n    return appConfigDefaultUserAgent;\n  }\n\n  return `${userSuppliedUserAgent} ${appConfigDefaultUserAgent}`;\n}\n\n"],"names":["createHash","createHmac","URLBuilder","coreHttp.QueryCollectionFormat","coreHttp.ServiceClient","coreHttp.Serializer","Parameters.name","Parameters.apiVersion","Parameters.after","Parameters.syncToken","Parameters.acceptDatetime","Mappers.KeyListResult","Mappers.GetKeysHeaders","Mappers.ErrorModel","Mappers.CheckKeysHeaders","Parameters.key0","Parameters.label","Parameters.select","Mappers.KeyValueListResult","Mappers.GetKeyValuesHeaders","Mappers.CheckKeyValuesHeaders","Parameters.key1","Parameters.ifMatch","Parameters.ifNoneMatch","Mappers.KeyValue","Mappers.GetKeyValueHeaders","Mappers.PutKeyValueHeaders","Mappers.DeleteKeyValueHeaders","Mappers.CheckKeyValueHeaders","Mappers.LabelListResult","Mappers.GetLabelsHeaders","Mappers.CheckLabelsHeaders","Mappers.PutLockHeaders","Mappers.DeleteLockHeaders","Mappers.GetRevisionsHeaders","Mappers.CheckRevisionsHeaders","BaseRequestPolicy","delay","Constants","getTracer","SpanKind","CanonicalCode","RestError","apiVersion","isTokenCredential","operationOptionsToRequestOptionsBase","__asyncValues","__asyncDelegator","exponentialRetryPolicy","systemErrorRetryPolicy","tracingPolicy","userAgentPolicy","getCoreHttpDefaultUserAgentValue"],"mappings":"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"}